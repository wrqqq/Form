{"version":3,"sources":["components/TextField.js","App.js","index.js"],"names":["Form","state","name","surname","mail","phone","text","handleChange","event","_this","setState","Object","defineProperty","target","value","handleSubmit","e","preventDefault","_this$state","console","log","classes","this","props","react_default","a","createElement","lib","ref","onSubmit","onError","errors","className","form","Grid_default","container","spacing","item","xs","sm","id","label","fullWidth","textField","onChange","margin","validators","errorMessages","react_input_mask_default","mask","required","multiline","rows","rowsMax","Button_default","type","variant","color","size","button","React","Component","withStyles","padding","paddingLeft","paddingRight","width","display","marginTop","App","TextField","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c4fdc82f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputMask from 'react-input-mask';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = () => ({\r\n    textField: {\r\n\r\n    },\r\n    container: {\r\n        padding: 30\r\n    },\r\n    form: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20\r\n    },\r\n    button: {\r\n        width: 320,\r\n        display: 'block',\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass Form extends React.Component {\r\n    state = {\r\n        name: '',\r\n        surname: '',\r\n        mail: '',\r\n        phone: '',\r\n        text: ''\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, surname, mail, phone, text } = this.state;\r\n\r\n        /* // Здесь обертка axios для отправки запроса, не нашел куда отправить) //\r\n        axios.post('https://wrqqq.github.io', { name, surname, mail, phone, text })\r\n            .then((result) => {\r\n                alert(result);\r\n            });\r\n            */\r\n\r\n        console.log({name, surname, mail, phone, text});\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <ValidatorForm\r\n                ref=\"form\"\r\n                onSubmit={this.handleSubmit}\r\n                onError={errors => console.log(errors)}\r\n                className={classes.form}\r\n            >\r\n                    <Grid container spacing={24}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextValidator\r\n                                id=\"standard-name\"\r\n                                label=\"Имя\"\r\n                                name='name'\r\n                                fullWidth\r\n                                className={classes.textField}\r\n                                value={this.state.name}\r\n                                onChange={this.handleChange('name')}\r\n                                margin=\"normal\"\r\n                                validators={['required', 'minStringLength:3']}\r\n                                errorMessages={['this field is required', 'Слишком короткое значение ']}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextValidator\r\n                                id=\"standard-surname\"\r\n                                label=\"Фамилия\"\r\n                                fullWidth\r\n                                name='surname'\r\n                                className={classes.textField}\r\n                                value={this.state.surname}\r\n                                onChange={this.handleChange('surname')}\r\n                                margin=\"normal\"\r\n                                validators={['required', 'minStringLength:3']}\r\n                                errorMessages={['this field is required', 'Слишком короткое значение ']}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextValidator\r\n                                id=\"standard-mail\"\r\n                                label=\"Почта\"\r\n                                name='email'\r\n                                fullWidth\r\n                                className={classes.textField}\r\n                                value={this.state.mail}\r\n                                onChange={this.handleChange('mail')}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputMask\r\n                                mask=\"+7 999 999 99 99\"\r\n                                value={this.state.phone}\r\n                                onChange={this.handleChange('phone')}\r\n                                required\r\n                            >\r\n                                {() => <TextValidator id=\"standard-surname\"\r\n                                                  label=\"Номер телефона\"\r\n                                                  name=\"phone\"\r\n                                                  fullWidth\r\n                                                  className={classes.textField}\r\n                                                  margin=\"normal\"\r\n                                                  />}\r\n                            </InputMask>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextValidator\r\n                                id=\"standard-surname\"\r\n                                label=\"Дополнительная информация\"\r\n                                fullWidth\r\n                                multiline={true}\r\n                                rows={6}\r\n                                name='text'\r\n                                rowsMax={10}\r\n                                className={classes.textField}\r\n                                value={this.state.text}\r\n                                onChange={this.handleChange('text')}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button type='submit' variant=\"contained\" color=\"primary\" size='large' className={classes.button}>\r\n                        Отправить\r\n                    </Button>\r\n            </ValidatorForm>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Form);","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/TextField';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Форма обратной связи:</h1>\n        <Form/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}